@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@using System.Xml.XPath
@using System.Text;
@using System.Collections;  
@{
    dynamic homeNode = CurrentPage.AncestorOrSelf(1);
    var homePage = new HomePage(Umbraco.TypedContent(homeNode.Id));
    int idx = 0;
}
    <header class="header scroller">
        <div class="header__menu text-center">
            

            <!--Mobile Nav-->
            <nav class="navbar navbar-default mobileNav">
                <div class="container-fluid">
                    <div class="navbar-header">
                        <!--mobile nav btn-->
                        <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#lad-mobile-collapse">
                            <span class="sr-only">Toggle navigation</span>
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                        </button>
                        <!--LAN LOGO-->
                        <a href="/" class="navbar-brand text-hide header__mobile--logo">Lockwood, Andrews, &amp; Newnam, Inc.</a>
                    </div> <!--end navbar header-->


                    <div class="collapse navbar-collapse" id="lad-mobile-collapse">
                        <ul class="nav navbar-nav">
                            @foreach (var l1 in homePage.ChildPagesForNavigation)
                            {
                                if (l1.ShowChildrenInNavigation)
                                {
                                    <li class="dropdown">
                                        <a class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">@l1.Name<span class="caret"></span></a>
                                        <ul class="dropdown-menu" role="menu">
                                            @for (var j = 0; j < l1.ChildPagesForNavigation.Count(); j++)
                                            {
                                                var l2 = l1.ChildPagesForNavigation.ElementAt(j);
                                                if (l2.HasMasterDocType)
                                                {
                                                    <li><a href="@l2.Url">@l2.NavigationTitle</a></li>
                                                    if (j == (l1.ChildPagesForNavigation.Count() - 1))
                                                    {
                                                        <li class="divider"></li>
                                                    }
                                                }
                                                else
                                                {
                                                    <li><span>@l2.NavigationTitle</span></li>
                                                    foreach (var l3 in l2.ChildPagesForNavigation)
                                                    {
                                                        <li><a href="@l3.Url">@l3.NavigationTitle</a></li>
                                                    }
                                                    <li class="divider"></li>
                                                }
                                            }

                                        </ul>

                                    </li>
                                }
                                else
                                {
                                    <li><a href="@l1.Url">@l1.NavigationTitle</a></li>
                                }

                            }
                        </ul>

                    </div> <!--end mobile nav collapse-->

                </div>

            </nav> <!--end mobile nav-->

            <nav class="navbar navbar-default container desktopNav" role="navigation">
                <div class="navbar-header">
                    <a href="/" class="header__logo col-sm-8 col-md-8 col-lg-12 col-sm-pull-3 col-md-pull-2 col-lg-pull-0 text-center text-hide" style="float: none;">Lockwood, Andrews, &amp; Newnam, Inc.</a>
                    <button type="button" class="navbar-toggle navbar-right" data-toggle="collapse" data-target="#lad-navbar-collapse-1">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                </div>

                <div id="lad-navbar-collapse-1" class="collapse navbar-collapse">
                    <ul class="nav navbar-nav">
                        @foreach(dynamic child in homeNode.Children.Where("! hideFromNavigation"))
                        {
                            string nm = ((! string.IsNullOrEmpty(child.GetPropertyValue("navigationName"))) ? child.GetPropertyValue("navigationName") : child.Name);
                            string c = string.Empty;
                            string d = string.Empty;
                            if( CurrentPage.AncestorOrSelf(2).Id == child.Id)
                            {
                                c = "active";
                            }
                            if (child.Children.Any() && (!child.HasProperty("hideSubpagesFromNavigation") || !child.GetPropertyValue("hideSubpagesFromNavigation")))
                            {
                                d = "dropdown";
                                nm += "  <span class=\"caret\"></span>";
                            }
                            string navColumns = "0";
                            if( child.HasProperty("navigationColumnCount") && child.HasValue("navigationColumnCount"))
                            {
                                navColumns = child.GetPropertyValue("navigationColumnCount").ToString();
                            }
                            <li class="@d @c">
                                @if(child.Id == 1060)
                                {
                                    <a href="@child.Url?type=Featured">@Html.Raw(nm)</a>
                                } else if(child.TemplateId <= 0) {
                                    <a>@Html.Raw(nm)</a>
                                } else {
                                    <a href="@child.Url">@Html.Raw(nm)</a>
                                }
                                @if (child.Children.Any() && (!child.HasProperty("hideSubpagesFromNavigation") || !child.GetPropertyValue("hideSubpagesFromNavigation")))
                                {
                                    dynamic childFirst = child.Children.First();
                                    <ul class="dropdown-menu megamenu" role="menu">
                                        @if(childFirst.TemplateId > 0 )
                                        {
                                            <li class="container text-left">
                                                
                                                <ul class="list-inline clearfix nav-columns" data-columns="@navColumns">
                                                    @foreach (dynamic level2 in child.Children.Where("! hideFromNavigation"))
                                                    {
                                                        if (level2.TemplateId > 0)
                                                        {
                                                            string nm2 = ((!string.IsNullOrEmpty(level2.GetPropertyValue("navigationName"))) ? level2.GetPropertyValue("navigationName") : level2.Name);
                                                            var newWindow = level2.GetPropertyValue("newWindow");
                                                            var target = newWindow ? "target='_blank'" : string.Empty;
                                                            <li><a href="@level2.Url" @target>@nm2</a></li>
                                                        }
                                                    }
                                                </ul>

                                                
                                            </li>
                                        }
                                        else
                                        {
                                            <li class="container text-left">
                                                @foreach(dynamic level2 in child.Children.Where("! hideFromNavigation"))
                                                {
                                                    string nm2 = ((! string.IsNullOrEmpty(level2.GetPropertyValue("navigationName"))) ? level2.GetPropertyValue("navigationName") : level2.Name);
                                                    string cls = "col-sm-9 col-md-9 col-lg-9";
                                                    if( idx > 0 )
                                                    {
                                                        cls = "col-sm-3 col-md-3 col-lg-3 col-lg-push-1";
                                                        navColumns = "1";
                                                    }
                                                    <ul class="@Html.Raw(cls)">
                                                        <li><span>@nm2</span></li>
                                                        <li>
                                                            <ul class="list-inline clearfix nav-columns" data-columns="@navColumns">
                                                                @foreach (dynamic level3 in level2.Children.Where("! hideFromNavigation && TemplateId > 0"))
                                                                {
                                                                    string nm3 = ((!string.IsNullOrEmpty(level3.GetPropertyValue("navigationName"))) ? level3.GetPropertyValue("navigationName") : level3.Name);
                                                                    var newWindow = level3.GetPropertyValue("newWindow");
                                                                    var target = newWindow ? "target='_blank'" : string.Empty;
                                                                    <li><a href="@level3.Url" @target>@nm3</a></li>
                                                                }
                                                            </ul>
                                                        </li>
                                                    </ul>
                                                    idx ++;
                                                }
                                            </li>
                                        }
                                    </ul>
                                }
                                else if(child.Id == 1060)
                                {
                                    List<string> types = new List<string>();
                                    XPathNodeIterator iterator = umbraco.library.GetPreValues(1100);
                                    iterator.MoveNext(); //move to first
                                    XPathNodeIterator preValues = iterator.Current.SelectChildren("preValue", "");
                                    
                                    <ul class="dropdown-menu megamenu" role="menu" style="display: none;">
                                        <li class="container text-left">
                                            
                                            <ul class="list-inline clearfix nav-columns" data-columns="@navColumns">
                                                @while (preValues.MoveNext())
                                                {
                                                    <li><a href="/portfolio/?type=@preValues.Current.Value">@preValues.Current.Value</a></li>
                                                }
                                            </ul>
                                            
                                        </li>
                                    </ul>
                                }
                            </li>
                        }
                    </ul>
                    <div class="nav navbar-nav navbar-right navbar-search">
                        <div class="search-toggle text-center pull-right hidden-xs">
                            <a href="#"><span class="glyphicon glyphicon-search"></span></a>
                        </div>
                    </div>
                    <form role="search" method="GET" class="search-form clear hide" action="/Search">
                        <fieldset class="search-box-wrapper">
                            <label for="search" class="sr-only">Search</label>
                            <input type="search" id="search" class="search-field text-right" placeholder="Search &hellip;" value="" name="q" title="Search for:" />
                            @* <input type="submit" class="search-submit" value="Submit" /> *@
                        </fieldset>
                    </form>
                </div><!-- /.navbar-collapse -->
            </nav>

        </div>
    </header>
